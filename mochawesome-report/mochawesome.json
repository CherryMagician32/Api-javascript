{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 4,
    "pending": 1,
    "failures": 0,
    "start": "2023-12-07T22:42:27.553Z",
    "end": "2023-12-07T22:42:31.894Z",
    "duration": 4341,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4682303d-8329-4915-bcf6-bc3029d0c0fe",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89091182-d948-4c4f-8c8e-a3eaadd42c4c",
          "title": "DELETE API Request Tests",
          "fullFile": "C:\\Users\\chris\\Api-javascript\\tests\\delete_request.js",
          "file": "\\tests\\delete_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should delete a resource",
              "fullTitle": "DELETE API Request Tests Should delete a resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d16e40d4-2b1c-4353-ad96-79ad6cb6face",
              "parentUUID": "89091182-d948-4c4f-8c8e-a3eaadd42c4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "d16e40d4-2b1c-4353-ad96-79ad6cb6face"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a84cfb8e-77f3-45be-b90d-0880148876e6",
          "title": "GET API Request Tests",
          "fullFile": "C:\\Users\\chris\\Api-javascript\\tests\\get_request.js",
          "file": "\\tests\\get_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should give a list of users",
              "fullTitle": "GET API Request Tests Should give a list of users",
              "timedOut": false,
              "duration": 1839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://reqres.in/api/users?page=2');\nconsole.log(res.data);\n//assertions\nexpect(res.data.page).equal(2);\nexpect(res.data.per_page).equal(6);\n//expect(res.data.first_name).equal(\"Michael\");",
              "err": {},
              "uuid": "009b635f-2d4c-4e58-a645-b086903ba620",
              "parentUUID": "a84cfb8e-77f3-45be-b90d-0880148876e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "009b635f-2d4c-4e58-a645-b086903ba620"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cf057793-4b20-4e0f-a0fe-ae82fa26ac54",
          "title": "PATCH API Request Tests",
          "fullFile": "C:\\Users\\chris\\Api-javascript\\tests\\patch_request.js",
          "file": "\\tests\\patch_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should Patch user details",
              "fullTitle": "PATCH API Request Tests Should Patch user details",
              "timedOut": false,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName('female');\n    \nconst res = await axios.patch('https://reqres.in/api/users/2',{\n    \"name\": randomName,\n  \n});\nconsole.log(res.data);\n    \n//assertions",
              "err": {},
              "uuid": "dcfe53cd-3e97-4476-be20-9d16df61e9ad",
              "parentUUID": "cf057793-4b20-4e0f-a0fe-ae82fa26ac54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcfe53cd-3e97-4476-be20-9d16df61e9ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ff3f4a22-1461-4f7e-92fd-c4c55989f32d",
          "title": "POST API Request Tests",
          "fullFile": "C:\\Users\\chris\\Api-javascript\\tests\\post_request.js",
          "file": "\\tests\\post_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should Post user details",
              "fullTitle": "POST API Request Tests Should Post user details",
              "timedOut": false,
              "duration": 1087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName('female');\nconst randomJobTitle= faker.person.jobArea();\nconst res = await axios.post('https://reqres.in/api/users',{\n    \"name\": randomName,\n    \"job\": randomJobTitle\n});\nconsole.log(res.data);\n    \n//assertions\nexpect(res.data.name).equal(randomName);\nexpect(res.data.job).equal(randomJobTitle);",
              "err": {},
              "uuid": "80ceb5dd-09ba-4eab-9fe1-3d47d44a15f6",
              "parentUUID": "ff3f4a22-1461-4f7e-92fd-c4c55989f32d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80ceb5dd-09ba-4eab-9fe1-3d47d44a15f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "062b229f-fb98-4550-8f06-93d03ec3e6c3",
          "title": "PUT API Request Tests",
          "fullFile": "C:\\Users\\chris\\Api-javascript\\tests\\put_request.js",
          "file": "\\tests\\put_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should Update user details",
              "fullTitle": "PUT API Request Tests Should Update user details",
              "timedOut": false,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName('female');\nconst randomJobTitle= faker.person.jobArea();\nconst res = await axios.put('https://reqres.in/api/users/2',{\n    \"name\": randomName,\n    \"job\": randomJobTitle\n});\nconsole.log(res.data);\n    \n//assertions\nexpect(res.data.name).equal(randomName);\nexpect(res.data.job).equal(randomJobTitle);",
              "err": {},
              "uuid": "3f7d7c1e-d8dd-420b-89c8-23e5157e3146",
              "parentUUID": "062b229f-fb98-4550-8f06-93d03ec3e6c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f7d7c1e-d8dd-420b-89c8-23e5157e3146"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 816,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}